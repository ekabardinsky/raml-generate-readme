{
  "INVALID_PARAMETER_NAME" : {
    "code" : "INVALID_PARAMETER_NAME",
    "message" : "Invalid parameter name: '{{paramName}}' is reserved"
  },
  "UNUSED_PARAMETER" : {
    "code" : "UNUSED_PARAMETER",
    "message" : "Unused parameter: '{{paramName}}'"
  },
  "UNUSED_PARAMETER_MISSING_SEPARATING_SPACE" : {
    "code" : "UNUSED_PARAMETER_MISSING_SEPARATING_SPACE",
    "message" : "Unused parameter: '{{paramName}}'. Probably, separating space is missing after colon and supposed mapping is '{{correctMapping}}'"
  },
  "INVALID_PROPERTY_OWNER_TYPE": {
    "code" : "INVALID_PROPERTY_OWNER_TYPE",
    "message" : "Property '{{propName}}' can only be used if type is {{namesStr}}"
  },
  "NODE_KEY_IS_A_MAP": {
    "code" : "NODE_KEY_IS_A_MAP",
    "message" : "Node key can not be a map"
  },
  "NODE_KEY_IS_A_SEQUENCE": {
    "code" : "NODE_KEY_IS_A_SEQUENCE",
    "message" : "Node key can not be a sequence"
  },
  "SEQUENCE_REQUIRED" : {
    "code" : "SEQUENCE_REQUIRED",
    "message" : "Node: '{{name}}' should be wrapped in sequence"
  },
  "PROPERTY_MUST_BE_A_MAP_10": {
    "code" : "PROPERTY_MUST_BE_A_MAP_10",
    "message" : "'{{propName}}' should be a map in RAML 1.0"
  },
  "PROPERTY_MUST_BE_A_MAP": {
    "code" : "PROPERTY_MUST_BE_A_MAP",
    "message" : "Property '{{propName}}' should be a map"
  },
  "PROPERTY_MUST_BE_A_SEQUENCE": {
    "code" : "PROPERTY_MUST_BE_A_SEQUENCE",
    "message" : "Property '{{propName}}' should be a sequence"
  },
  "INVALID_PROPERTY_RANGE": {
    "code" : "INVALID_PROPERTY_RANGE",
    "message" : "Property '{{propName}}' must be a {{range}}"
  },
  "MAP_REQUIRED" : {
    "code" : "MAP_REQUIRED",
    "message" : "should be a map in RAML 1.0"
  },
  "UNRESOLVED_REFERENCE" : {
    "code" : "UNRESOLVED_REFERENCE",
    "message" : "Reference: '{{ref}}' can not be resolved"
  },
  "SCALAR_PROHIBITED" : {
    "code" : "SCALAR_PROHIBITED",
    "message" : "Property '{{propName}}' can not have scalar value"
  },
  "UNKNOWN_NODE" : {
    "code" : "UNKNOWN_NODE",
    "message" : "Unknown node: '{{name}}'"
  },
  "INVALID_PROPERTY_USAGE" : {
    "code" : "INVALID_PROPERTY_USAGE",
    "message" : "{{ramlVersion}} does not allow using '{{propName}}' property within {{typeName | !pluralize |!sentencecase | !lowercase}}"
  },
  "INVALID_SUBRESOURCE_USAGE" : {
    "code" : "INVALID_SUBRESOURCE_USAGE",
    "message" : "Subresources are not allowed in {{typeName | !pluralize |!sentencecase | !lowercase}}"
  },
  "INVALID_METHOD_USAGE" : {
    "code" : "INVALID_METHOD_USAGE",
    "message" : "Declaring methods is not allowed in {{typeName | !pluralize |!sentencecase | !lowercase}}"
  },
  "RECURSIVE_DEFINITION" : {
    "code" : "RECURSIVE_DEFINITION",
    "message" : "Recursive definition: '{{name}}'"
  },
  "QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE" : {
    "code" : "QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE",
    "message" : "'queryString' and 'queryParameters' properties are mutually exclusive. '{{propName}}' is already specified."
  },
  "ISSUES_IN_THE_LIBRARY" : {
    "code" : "ISSUES_IN_THE_LIBRARY",
    "message" : "Issues in the used library: '{{value}}'"
  },
  "INVALID_LIBRARY_PATH" : {
    "code" : "INVALID_LIBRARY_PATH",
    "message" : "Can not resolve library from path: '{{path}}'"
  },
  "EMPTY_FILE" : {
    "code" : "EMPTY_FILE",
    "message" : "Empty file: {{path}}"
  },
  "SPACES_IN_KEY" : {
    "code" : "SPACES_IN_KEY",
    "message" : "Keys should not have spaces '{{value}}'"
  },
  "INCLUDE_ERROR" : {
    "code" : "INCLUDE_ERROR",
    "message" : "{{msg}}"
  },
  "PATH_EXCEEDS_ROOT" : {
    "code" : "PATH_EXCEEDS_ROOT",
    "message" : "Resolved include path exceeds file system root"
  },
  "ILLEGAL_PATTERN" : {
    "code" : "ILLEGAL_PATTERN",
    "message" : "Illegal pattern: '{{value}}'"
  },
  "UNKNOWN_FUNCTION" : {
    "code" : "UNKNOWN_FUNCTION",
    "message" : "Unknown function applied to parameter: '{{transformerName}}'"
  },
  "REQUEST_BODY_DISABLED" : {
    "code" : "REQUEST_BODY_DISABLED",
    "message" : "Request body is disabled for '{{methodName}}' method."
  },
  "SCALAR_EXPECTED" : {
    "code" : "SCALAR_EXPECTED",
    "message" : "Scalar is expected here"
  },
  "UNKNOWN_ANNOTATION" : {
    "code" : "UNKNOWN_ANNOTATION",
    "message" : "Unknown annotation: '{{aName}}'"
  },
  "SECUREDBY_LIST_08" : {
    "code" : "SECUREDBY_LIST_08",
    "message" : "'securedBy' should be a list in RAML08"
  },
  "INVALID_ANNOTATION_LOCATION" : {
    "code" : "INVALID_ANNOTATION_LOCATION",
    "message" : "Annotation '{{aName}}' can not be placed at this location, allowed targets are: {{aValues}}"
  },
  "BOOLEAN_EXPECTED" : {
    "code" : "BOOLEAN_EXPECTED",
    "message" : "'true' or 'false' is expected here"
  },
  "NUMBER_EXPECTED" : {
    "code" : "NUMBER_EXPECTED",
    "message" : "Value of '{{propName}}' must be a number"
  },
  "STATUS_MUST_BE_3NUMBER" : {
    "code" : "STATUS_MUST_BE_3NUMBER",
    "message" : "Status code should be 3 digits number."
  },
  "34" : {
    "code" : "34",
    "message" : ""
  },
  "EMPTY_VALUE_NOT_ALLOWED" : {
    "code" : "EMPTY_VALUE_NOT_ALLOWED",
    "message" : "Empty value is not allowed here"
  },
  "INVALID_VALUE_SCHEMA" : {
    "code" : "INVALID_VALUE_SCHEMA",
    "message" : "Invalid value schema: '{{iValue}}'"
  },
  "INVALID_VALUE" : {
    "code" : "INVALID_VALUE",
    "message" : "Invalid value: '{{iValue}}'. Allowed values are: {{aValues}}"
  },
  "SCHEMA_EXCEPTION" : {
    "code" : "SCHEMA_EXCEPTION",
    "message" : "Schema exception: {{msg}}"
  },
  "SCHEMA_ERROR" : {
    "code" : "SCHEMA_ERROR",
    "message" : "{{msg}}"
  },
  "MISSING_VERSION" : {
    "code" : "MISSING_VERSION",
    "message" : "Missing 'version'"
  },
  "URI_PARAMETER_NAME_MISSING" : {
    "code" : "URI_PARAMETER_NAME_MISSING",
    "message" : "URI parameter must have name specified"
  },
  "URI_EXCEPTION" : {
    "code" : "URI_EXCEPTION",
    "message" : "{{msg}}"
  },
  "INVALID_MEDIATYPE" : {
    "code" : "INVALID_MEDIATYPE",
    "message" : "Invalid media type '{{mediaType}}'"
  },
  "MEDIATYPE_EXCEPTION" : {
    "code" : "MEDIATYPE_EXCEPTION",
    "message" : "{{msg}}"
  },
  "FORM_IN_RESPONSE" : {
    "code" : "FORM_IN_RESPONSE",
    "message" : "Form related media types can not be used in responses"
  },
  "UNUSED_URL_PARAMETER" : {
    "code" : "UNUSED_URL_PARAMETER",
    "message" : "Unused url parameter {{paramName}}"
  },
  "UNRECOGNIZED_ELEMENT" : {
    "code" : "UNRECOGNIZED_ELEMENT",
    "message" : "Unrecognized {{referencedToName}}: '{{ref}}'."
  },
  "TYPES_VARIETY_RESTRICTION" : {
    "code" : "TYPES_VARIETY_RESTRICTION",
    "message" : "Type can be either of: string, number, integer, file, date or boolean"
  },
  "UNRECOGNIZED_SECURITY_SCHEME" : {
    "code" : "UNRECOGNIZED_SECURITY_SCHEME",
    "message" : "Unrecognized security scheme type: '{{ref}}'. Allowed values are: 'OAuth 1.0', 'OAuth 2.0', 'Basic Authentication', 'DigestSecurityScheme Authentication', 'x-{other}'"
  },
  "DUPLICATE_TRAIT_REFERENCE" : {
    "code" : "DUPLICATE_TRAIT_REFERENCE",
    "message" : "Duplicate trait reference: '{{refValue}}'."
  },
  "IS_IS_ARRAY" : {
    "code" : "IS_IS_ARRAY",
    "message" : "Property 'is' must be an array"
  },
  "RESOURCE_TYPE_NAME" : {
    "code" : "RESOURCE_TYPE_NAME",
    "message" : "Resource type name must be provided"
  },
  "MULTIPLE_RESOURCE_TYPES" : {
    "code" : "MULTIPLE_RESOURCE_TYPES",
    "message" : "A resource or resourceType can inherit from a single resourceType"
  },
  "UNKNOWN_RAML_VERSION" : {
    "code" : "UNKNOWN_RAML_VERSION",
    "message" : "Unknown version of RAML expected to see one of '#%RAML 0.8' or '#%RAML 1.0'"
  },
  "UNKNOWN_TOPL_LEVEL_TYPE" : {
    "code" : "UNKNOWN_TOPL_LEVEL_TYPE",
    "message" : "Unknown top level type: '{{typeName}}'"
  },
  "REDUNDANT_FRAGMENT_NAME" : {
    "code" : "REDUNDANT_FRAGMENT_NAME",
    "message" : "Redundant fragment name: '{{typeName}}'"
  },
  "CONTEXT_REQUIREMENT_VIOLATION" : {
    "code" : "CONTEXT_REQUIREMENT_VIOLATION",
    "message" : "{{v1}} should be {{v2}} to use type {{v3}}"
  },
  "WEB_FORMS" : {
    "code" : "WEB_FORMS",
    "message" : "File type can be only used in web forms"
  },
  "MISSING_REQUIRED_PROPERTY" : {
    "code" : "MISSING_REQUIRED_PROPERTY",
    "message" : "Missing required property '{{propName}}'"
  },
  "VALUE_FOR_REQUIRED_PROPERTY_NOT_PROVIDED" : {
    "code" : "VALUE_FOR_REQUIRED_PROPERTY_NOT_PROVIDED",
    "message" : "Value is not provided for required property '{{propName}}'"
  },
  "VALUE_NOT_PROVIDED" : {
    "code" : "VALUE_NOT_PROVIDED",
    "message" : "Value is not provided for parameter: '{{propName}}'"
  },
  "SUSPICIOUS_DOUBLEQUOTE" : {
    "code" : "SUSPICIOUS_DOUBLEQUOTE",
    "message" : "Suspicious double quoted multiline scalar, it is likely that you forgot closing \"{{value}}"
  },
  "ANNOTATION_TARGET_MUST_BE_A_STRING" : {
    "code" : "ANNOTATION_TARGET_MUST_BE_A_STRING",
    "message" : "Annotation target must be set by a string"
  },
  "ALLOWED_TARGETS_MUST_BE_ARRAY" : {
    "code" : "ALLOWED_TARGETS_MUST_BE_ARRAY",
    "message" : "'allowedTargets' property value must be an array of type names or a single type name"
  },
  "UNSUPPORTED_ANNOTATION_TARGET" : {
    "code" : "UNSUPPORTED_ANNOTATION_TARGET",
    "message" : "Unsupported annotation target: '{{aTarget}}'"
  },
  "SCHEMA_NAME_MUST_BE_STRING" : {
    "code" : "SCHEMA_NAME_MUST_BE_STRING",
    "message" : "Schema '{{name}}' must be a string"
  },
  "FORM_PARAMS_IN_RESPONSE" : {
    "code" : "FORM_PARAMS_IN_RESPONSE",
    "message" : "Form parameters can not be used in response"
  },
  "FORM_PARAMS_WITH_EXAMPLE" : {
    "code" : "FORM_PARAMS_WITH_EXAMPLE",
    "message" : "'formParameters' property cannot be used together with the 'example' or 'schema' properties"
  },
  "AUTHORIZATION_GRANTS_ENUM" : {
    "code" : "AUTHORIZATION_GRANTS_ENUM",
    "message" : "'authorizationGrants' value should be one of 'authorization_code', 'implicit', 'password', 'client_credentials' or to be an abolute URI"
  },
  "AUTHORIZATION_URI_REQUIRED" : {
    "code" : "AUTHORIZATION_URI_REQUIRED",
    "message" : "'authorizationUri' is required when `authorization_code` or `implicit` grant type are used "
  },
  "REPEATING_COMPONENTS_IN_ENUM" : {
    "code" : "REPEATING_COMPONENTS_IN_ENUM",
    "message" : "'enum' value contains repeating components"
  },
  "INTEGER_EXPECTED" : {
    "code" : "INTEGER_EXPECTED",
    "message" : "Integer is expected"
  },
  "NUMBER_EXPECTED_2" : {
    "code" : "NUMBER_EXPECTED_2",
    "message" : "Number is expected"
  },
  "RESOURCE_TYPE_NULL" : {
    "code" : "RESOURCE_TYPE_NULL",
    "message" : "Resource type can not be null"
  },
  "SCALAR_PROHIBITED_2" : {
    "code" : "SCALAR_PROHIBITED_2",
    "message" : "Node '{{name}}' can not be a scalar"
  },
  "VERSION_NOT_ALLOWED" : {
    "code" : "VERSION_NOT_ALLOWED",
    "message" : "'version' parameter not allowed here",
    "comment" : "I dont like the message, but its coming from JS 0.8 parser @Denis"
  },
  "INVALID_OVERLAY_NODE" : {
    "code" : "INVALID_OVERLAY_NODE",
    "message" : "The '{{nodeId}}' node does not match any node of the master api."
  },
  "INVALID_OVERRIDE_IN_OVERLAY" : {
    "code" : "INVALID_OVERRIDE_IN_OVERLAY",
    "message" : "Property '{{propName}}' is not allowed to be overriden or added in overlays"
  },
  "KEYS_SHOULD_BE_UNIQUE" : {
    "code" : "KEYS_SHOULD_BE_UNIQUE",
    "message" : "Keys should be unique"
  },
  "ALREADY_EXISTS" : {
    "code" : "ALREADY_EXISTS",
    "message" : "{{capitalized}} '{{name}}' already exists"
  },
  "ALREADY_EXISTS_IN_CONTEXT" : {
    "code" : "ALREADY_EXISTS_IN_CONTEXT",
    "message" : "{{name}}' already exists in this context"
  },
  "PROPERTY_USED" : {
    "code" : "PROPERTY_USED",
    "message" : "Property already used: '{{propName}}'"
  },
  "PARENT_PROPERTY_USED" : {
    "code" : "PARENT_PROPERTY_USED",
    "message" : "{{parent}} property already used: '{{propName}}'"
  },
  "INVALID_JSON_SCHEMA" : {
    "code" : "INVALID_JSON_SCHEMA",
    "message" : "Invalid JSON schema. Unexpected value '{{propName}}'"
  },
  "EXAMPLE_SCHEMA_FAILURE" : {
    "code" : "EXAMPLE_SCHEMA_FAILURE",
    "message" : "Example does not conform to schema: {{msg}}"
  },
  "CAN_NOT_PARSE_JSON" : {
    "code" : "CAN_NOT_PARSE_JSON",
    "message" : "Can not parse JSON: {{msg}}"
  },
  "CAN_NOT_PARSE_XML" : {
    "code" : "CAN_NOT_PARSE_XML",
    "message" : "Can not parse XML: {{msg}}"
  },
  "OPTIONAL_SCLARAR_PROPERTIES_10" : {
    "code" : "OPTIONAL_SCLARAR_PROPERTIES_10",
    "message" : "Optional scalar properties are not allowed in {{templateName|!pluralize|!sentencecase|!lowercase}} and their descendants: '{{propName}}?'"
  },
  "OPTIONAL_PROPERTIES_10" : {
    "code" : "OPTIONAL_PROPERTIES_10",
    "message" : "Optional properties are not allowed in '{{propName|!pluralize|!sentencecase|!lowercase}}': '{{oPropName}}'"
  },
  "ONLY_METHODS_CAN_BE_OPTIONAL" : {
    "code" : "ONLY_METHODS_CAN_BE_OPTIONAL",
    "message" : "Only method nodes can be optional"
  },
  "PROPERTY_UNUSED" : {
    "code" : "PROPERTY_UNUSED",
    "message" : "{{propName}} unused"
  },
  "CYCLE_IN_DEFINITION" : {
    "code" : "CYCLE_IN_DEFINITION",
    "message" : "{{typeName}} definition contains cycle: {{cycle}}"
  },
  "SEQUENCE_NOT_ALLOWED_10" : {
    "code" : "SEQUENCE_NOT_ALLOWED_10",
    "message" : "In RAML 1.0 {{propName|!singularize|!sentencecase|!lowercase}} is not allowed to have sequence as definition"
  },
  "MAP_EXPECTED" : {
    "code" : "MAP_EXPECTED",
    "message" : "Map is expected here"
  },
  "ERROR_IN_INCLUDED_FILE" : {
    "code" : "ERROR_IN_INCLUDED_FILE",
    "message" : "Error in the included file: {{msg}}"
  },
  "NODE_SHOULD_HAVE_VALUE" : {
    "code" : "NODE_SHOULD_HAVE_VALUE",
    "message" : "node should have at least one member value"
  },
  "NAMED_PARAMETER_NEEDS_TYPE" : {
    "code" : "NAMED_PARAMETER_NEEDS_TYPE",
    "message" : "named parameter needs at least one type"
  },
  "ENUM_IS_EMPTY" : {
    "code" : "ENUM_IS_EMPTY",
    "message" : "enum is empty"
  },
  "ENUM_MUST_BE_AN_ARRAY" : {
    "code" : "ENUM_MUST_BE_AN_ARRAY",
    "message" : "the value of enum must be an array"
  },
  "DEFINITION_SHOULD_BE_A_MAP" : {
    "code" : "DEFINITION_SHOULD_BE_A_MAP",
    "message" : "{{typeName}} definition should be a map"
  },
  "RESOURCES_SHARE_SAME_URI" : {
    "code" : "RESOURCES_SHARE_SAME_URI",
    "message" : "Resources share same URI"
  },
  "TYPES_AND_SCHEMAS_ARE_EXCLUSIVE" : {
    "code" : "TYPES_AND_SCHEMAS_ARE_EXCLUSIVE",
    "message" : "'types' and 'schemas' are mutually exclusive"
  },
  "TEMPLATE_PARAMETER_NAME_MUST_CONTAIN_NONWHITESPACE_CHARACTERS" : {
    "code" : "TEMPLATE_PARAMETER_NAME_MUST_CONTAIN_NONWHITESPACE_CHARACTERS",
    "message" : "Trait or resource type parameter name must contain non whitespace characters"
  },
  "INVALID_SECURITY_SCHEME_SCOPE" : {
    "code" : "INVALID_SECURITY_SCHEME_SCOPE",
    "message" : "The '{{invalidScope}}' scope is not allowed for the '{{securityScheme}}' security scheme. Allowed scopes are: {{allowedScopes}}."
  },
  "INCLUDE_TAG_MISSING" : {
    "code" : "INCLUDE_TAG_MISSING",
    "message" : "The '!include' tag is missing"
  },
  "LIBRARY_PATH_MUST_BE_A_STRING" : {
    "code" : "LIBRARY_PATH_MUST_BE_A_STRING",
    "message" : "Library path must be string"
  },
  "INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL" : {
    "code" : "INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL",
    "message" : "Invalid resource name: unmatched '{{symbol}}'"
  },
  "MESSAGE_PARAMETER_NO_VALUE" : {
    "code" : "MESSAGE_PARAMETER_NO_VALUE",
    "message" : "Message parameter '{{paramName}}' has no value specified."
  },
  "SETVALUE_ONLY_MULTI_VALUES_PROPERTIES" : {
    "code" : "SETVALUE_ONLY_MULTI_VALUES_PROPERTIES",
    "message" : "setValue(string) only apply to multi-values properties"
  },
  "ISEMPTY_ONLY_MULTI_VALUES_ATTRIBUTES" : {
    "code" : "ISEMPTY_ONLY_MULTI_VALUES_ATTRIBUTES",
    "message" : "isEmpty() only apply to multi-values attributes"
  },
  "PLUGIN_REPORTS_AN_ERROR" : {
    "code" : "PLUGIN_REPORTS_AN_ERROR",
    "message" : "The {{pluginId}} plugin reports an error"
  },
  "PROPERTIES_SHOULD_HAVE_SAME_GRAMMAR_KIND" : {
    "code" : "PROPERTIES_SHOULD_HAVE_SAME_GRAMMAR_KIND",
    "message" : "Different properties with same name should have same grammar kind at this moment"
  },
  "MISSING_TITLE" : {
    "code" : "MISSING_TITLE",
    "message" : "missing title"
  },
  "INVALID_ARGUMENT" : {
    "code" : "INVALID_ARGUMENT",
    "message" : "Invalid Argument"
  },
  "METHOD_OWNED_BY" : {
    "code" : "METHOD_OWNED_BY",
    "message" : "Method is supposed to be owned by Resource or ResourceType. Here the method is owned by {{owner}}"
  },
  "POSITION_EXCEEDS_TEXT_LENGTH" : {
    "code" : "POSITION_EXCEEDS_TEXT_LENGTH",
    "message" : "Character position exceeds text length: {{pos}} > + {{length}}. Unit path: {{absPath}}"
  },
  "LINE_MAPPER_HAS_NULL_CONTENT" : {
    "code" : "LINE_MAPPER_HAS_NULL_CONTENT",
    "message" : "Line Mapper has been given null content{{path}}"
  },
  "EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS" : {
    "code" : "EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS",
    "message" : "Extensions and overlays list should contain legal file paths"
  },
  "CAN_NOT_RESOLVE" : {
    "code" : "CAN_NOT_RESOLVE",
    "message" : "Can not resolve {{path}}"
  },
  "CAN_NOT_RESOLVE_REASON" : {
    "code" : "CAN_NOT_RESOLVE_REASON",
    "message" : "Can not resolve {{path}} due to: {{reason}}"
  },
  "INVALID_FIRST_LINE" : {
    "code" : "INVALID_FIRST_LINE",
    "message" : "Invalid first line. A RAML document is expected to start with '#%RAML <version> <?fragment type>'."
  },
  "EXTENSIONS_AND_OVERLAYS_NOT_SUPPORTED_0_8" : {
    "code" : "EXTENSIONS_AND_OVERLAYS_NOT_SUPPORTED_0_8",
    "message" : "Extensions and overlays are not supported in RAML 0.8."
  },
  "API_CONTAINS_ERROR" : {
    "code" : "API_CONTAINS_ERROR",
    "message" : "Api contains errors."
  },
  "COULD_NOT_SET_STRUCTURED_VALUE" : {
    "code" : "COULD_NOT_SET_STRUCTURED_VALUE",
    "message" : "couldn't set structured value to a key: {{key}}"
  },
  "NOT_IMPLEMENTED" : {
    "code" : "NOT_IMPLEMENTED",
    "message" : "not implemented"
  },
  "COULD_NOT_MIX_TYPES_INHERITANCE" : {
    "code" : "COULD_NOT_MIX_TYPES_INHERITANCE",
    "message" : "couldn't mix user defined and basic types in inheritance"
  },
  "SPECIFY_APIPATH" : {
    "code" : "SPECIFY_APIPATH",
    "message" : "Please, specify -apiPath parameter"
  },
  "UNABLE_TO_EXECUTE_GET" : {
    "code" : "UNABLE_TO_EXECUTE_GET",
    "message" : "Unable to execute GET {{url}}"
  },
  "UNIT_PATH_IS_NULL" : {
    "code" : "UNIT_PATH_IS_NULL",
    "message" : "Unit path is null"
  },
  "FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER" : {
    "code" : "FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER",
    "message" : "Provided FSResolver is unable to list files. Please, use ExtendedFSResolver."
  },
  "NOT_IMPLEMENTED_INSERT_INTO_EMPTY_REF" : {
    "code" : "NOT_IMPLEMENTED_INSERT_INTO_EMPTY_REF",
    "message" : "not implemented: insert into empty include ref"
  },
  "ATTR_SETVALUE_NOT_RESOLVE" : {
    "code" : "ATTR_SETVALUE_NOT_RESOLVE",
    "message" : "attr.setValue: couldn't resolve: {{path}}"
  },
  "ONLY_MAP_NODES_ALLOWED" : {
    "code" : "ONLY_MAP_NODES_ALLOWED",
    "message" : "only MAP/MAPPING nodes allowed as values"
  },
  "UNSUPPORTED_CHANGE_VALUE_CASE" : {
    "code" : "UNSUPPORTED_CHANGE_VALUE_CASE",
    "message" : "Unsupported change value case: {{name}}"
  },
  "UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION" : {
    "code" : "UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION",
    "message" : "Unsupported case: attribute value conversion: {{curval}} ==> {{newval}} not supported"
  },
  "UNSUPPORTED_COMMAND" : {
    "code" : "UNSUPPORTED_COMMAND",
    "message" : "UNSUPPORTED_COMMAND: {{name}}"
  },
  "NEW_NODE_CONTENTS_ERROR_BELOW" : {
    "code" : "NEW_NODE_CONTENTS_ERROR_BELOW",
    "message" : "New node contents (causes error below): \n {{content}}"
  },
  "REPARSE_ERROR" : {
    "code" : "REPARSE_ERROR",
    "message" : "Reparse error {{content}}"
  },
  "INSERT_INTO_MAPPING_VALUE_NOT_SUPPORTED" : {
    "code" : "INSERT_INTO_MAPPING_VALUE_NOT_SUPPORTED",
    "message" : "Insert into mapping with {{value}} value not supported"
  },
  "INSERT_INTO_NOT_SUPPORTED" : {
    "code" : "INSERT_INTO_NOT_SUPPORTED",
    "message" : "Insert into {{name}} unsupported"
  },
  "DELETE_FROM_NOT_SUPPORTED" : {
    "code" : "DELETE_FROM_NOT_SUPPORTED",
    "message" : "Delete from {{name}} unsupported"
  },
  "CAN_NOT_BE_PARSED" : {
    "code" : "CAN_NOT_BE_PARSED",
    "message" : "{path} can not be parsed"
  },
  "RECURSIVE_DEFINITION_EMPTY" : {
    "code" : "RECURSIVE_DEFINITION_EMPTY",
    "message" : "Recursive definition"
  },
  "SHOULD_NEVER_HAPPEN_KIND" : {
    "code" : "SHOULD_NEVER_HAPPEN_KIND",
    "message" : "Should never happen; kind : {{kind}}"
  },
  "UNKNOWN_NODE_KIND" : {
    "code" : "UNKNOWN_NODE_KIND",
    "message" : "Unknown node kind: '{{kind}}'"
  },
  "NOT_IMPLEMENTED_KIND" : {
    "code" : "NOT_IMPLEMENTED_KIND",
    "message" : "markup not implemented: {{kind}}"
  },
  "EXPECTED_INSTEAD_OF" : {
    "code" : "EXPECTED_INSTEAD_OF",
    "message" : "{{expected}} expected instead of {{received}}"
  },
  "INSERTION_POINT_TYPE" : {
    "code" : "INSERTION_POINT_TYPE",
    "message" : "insertion point type: {{type}}"
  },
  "UNSUPPORTED_OPERATION_EXCEPTION" : {
    "code" : "UNSUPPORTED_OPERATION_EXCEPTION",
    "message" : "Unsupported operation exception"
  },
  "UNABLE_TO_FIND_CHILD" : {
    "code" : "UNABLE_TO_FIND_CHILD",
    "message" : "Unable to find correct child"
  },
  "NETWORK_ERROR" : {
    "code" : "NETWORK_ERROR",
    "message" : "Network Error"
  },
  "COULD_NOT_LOAD_API_FROM" : {
    "code" : "COULD_NOT_LOAD_API_FROM",
    "message" : "couldn't load api from {{path}}"
  },
  "METHOD_MUST_BE_OVERRIDDEN" : {
    "code" : "METHOD_MUST_BE_OVERRIDDEN",
    "message" : "The method must be overridden"
  },
  "UNKNOWN_ANNOTATION_TYPE" : {
    "code" : "UNKNOWN_ANNOTATION_TYPE",
    "message": "Using unknown annotation type: '{{typeName}}'"
  },
  "LIBRARY_CHAINIG_IN_ANNOTATION_TYPE" : {
    "code" : "LIBRARY_CHAINIG_IN_ANNOTATION_TYPE",
    "message": "Annotation type '{{typeName}}' imported through a library chain. Library chainig is not allowed."
  },
  "LIBRARY_CHAINIG_IN_ANNOTATION_TYPE_SUPERTYPE" : {
    "code" : "LIBRARY_CHAINIG_IN_ANNOTATION_TYPE_SUPERTYPE",
    "message": "Annotation type '{{typeName}}' depends on '{{chainedType}}' imported through a library chain. Library chainig is not allowed."
  },
  "PROTOCOLS_ARRAY" : {
    "code" : "PROTOCOLS_ARRAY",
    "message": "'protocols' value should be a non empty array"
  }
}